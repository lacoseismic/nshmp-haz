variables:
  CI_REGISTRY: ${CODE_REGISTRY}
  CI_REGISTRY_IMAGE: ${CODE_REGISTRY_IMAGE}
  DOCKER_DIR: docker-images
  DOCKER_TAR: ${DOCKER_DIR}/app.tar
  FAULT_SECTIONS: nshm-fault-sections
  FAULT_SECTIONS_GIT: https://gitlab-ci-token:${CI_JOB_TOKEN}@code.usgs.gov/ghsc/nshmp/${FAULT_SECTIONS}.git
  IMAGE_NAME: usgs/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}
  JACOCO_HTML_DIR: build/reports/jacoco/test/html
  JUNIT_FILES: build/test-results/test/TEST-*.xml
  NSHMP_LIB: nshmp-lib
  NSHMP_LIB_GIT: https://gitlab-ci-token:${CI_JOB_TOKEN}@code.usgs.gov/ghsc/nshmp/${NSHMP_LIB}.git

stages:
  - test
  - build
  - publish
  - deploy

####
# Template: GitLab runner tags
####
.dev-tags:
  tags:
    - development

####
# Templates:
#   - nshmp-lib: Download nshmp-lib repo
#   - fault-sections: Download nshm-fault-sections repo
#   - adjust-image-names: Update container image names
####
.templates:
  nshmp-lib: &nshmp-lib |-
    cd ..;
    rm -rf ${NSHMP_LIB};
    git clone ${NSHMP_LIB_GIT};
    cd ${CI_PROJECT_NAME};
  fault-sections: &fault-sections |-
    cd ..;
    rm -rf ${FAULT_SECTIONS};
    git clone ${FAULT_SECTIONS_GIT};
    cd ${CI_PROJECT_NAME};
  adjust-image-names: &adjust-image-names
    IMAGE_NAME=${IMAGE_NAME/:master/:latest};
    INTERNAL_IMAGE_NAME=${CI_REGISTRY_IMAGE}/${IMAGE_NAME};

####
# Template: Deploy to Docker Swarm
# Globals:
#   CODE_REGISTRY: Path to container registry
#   GENERIC_SWARM_DEPLOY_REPO: Path to swarm deploy container
#   CI_REGISTRY_IMAGE: Path to container image
####
.deploy:
  cache: {}
  image: ${CODE_REGISTRY}/ghsc/hazdev/cloud-formation/hazdev-build-runner:latest
  before_script:
    - *adjust-image-names
  script:
    - git clone ${GENERIC_SWARM_DEPLOY_REPO} generic-deploy
    - export REGISTRY=${CI_REGISTRY_IMAGE}
    - cp -v
      generic-deploy/default.config.sh
      generic-deploy/default.funcs.sh
      generic-deploy/deploy.sh
      scripts/.
    - scripts/deploy.sh
  stage: deploy
  tags:
    - deploy
    - swarm
  variables:
    APP_NAME: nshmp-haz
    STACK_NAME: nshmp-haz

.staging:
  only:
    - merge_request
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2

.staging01:
  tags:
    - staging01

.staging02:
  tags:
    - staging02

.production:
  except:
    - ^.*beta.*$
    - ^.*-rc.*$
  only:
    - tags@ghsc/nshmp/nshmp-haz-v2
    - production@ghsc/nshmp/nshmp-haz-v2

.production01:
  tags:
    - production01

.production02:
  tags:
    - production02

####
# Build jar file.
####
build project:
  stage: build
  image: gradle
  extends: .dev-tags
  only:
    - merge_request
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
    - production@ghsc/nshmp/nshmp-haz-v2
  before_script:
    - *nshmp-lib
  script:
    - ./gradlew assemble

####
# Run tests.
# Globals:
#   JACOCO_HTML_DIR - Directory of Jacoco html reports
#   JUNIT_FILES - Path to all Junit html files
####
test project:
  stage: test
  image: gradle
  extends: .dev-tags
  only:
    - merge_request
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
    - production@ghsc/nshmp/nshmp-haz-v2
  coverage: '/Total.*?([0-9]{1,3})%/'
  before_script:
    - *fault-sections
    - *nshmp-lib
  script:
    - ./gradlew check
    - cat ${JACOCO_HTML_DIR}/index.html
  artifacts:
    paths:
      - ${JACOCO_HTML_DIR}
    reports:
      junit: ${JUNIT_FILES}

####
# Build Docker image.
# Globals:
#   DOCKER_DIR - The directory to put Docker image
#   DOCKER_TAR - The path to the Docker image tar
#   LOCAL_IMAGE - Docker local image name
####
build image:
  stage: build
  image: docker:stable
  extends: .dev-tags
  only:
    - merge_request
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
    - production@ghsc/nshmp/nshmp-haz-v2
  before_script:
    - *adjust-image-names
    - rm -rf ${DOCKER_DIR}
    - apk add git;
    - *nshmp-lib
    - mv ../${NSHMP_LIB} .
    - *fault-sections
    - mv ../${FAULT_SECTIONS} .
  script:
    - mkdir ${DOCKER_DIR}
    - docker build -t local/${IMAGE_NAME} .
    - docker save local$/{IMAGE_NAME} > ${DOCKER_TAR}
  artifacts:
    paths:
      - ${DOCKER_DIR}

####
# Publish Docker image to GitLab registry.
# Globals:
#   CHS_PASSWORD - GitLab password
#   CHS_USERNAME - GitLab username
#   DOCKER_TAR - The path to the Docker image tar
####
publish image:
  stage: publish
  image: docker:stable
  tags:
    - build
  only:
    - merge_request
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
    - production@ghsc/nshmp/nshmp-haz-v2
  before_script:
    - *adjust-image-names
  script:
    - docker load -i ${DOCKER_TAR}
    - docker tag local/${IMAGE_NAME} ${INTERNAL_IMAGE_NAME}
    - docker push ${INTERNAL_IMAGE_NAME}
    - docker image rm local/${IMAGE_NAME}
    - docker image rm ${INTERNAL_IMAGE_NAME}

####
# Deploy to prod01
####
# Production01:
#   extends:
#     - .deploy
#     - .production
#     - .production01

####
# Deploy to prod02
####
# Production02:
#   extends:
#     - .deploy
#     - .production
#     - .production02

####
# Deploy to stage01
####
Staging01:
  extends:
    - .deploy
    - .staging
    - .staging01

####
# Deploy to stage02
####
Staging02:
  extends:
    - .deploy
    - .staging
    - .staging02
