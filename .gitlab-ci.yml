variables:
  GIT_NSHMP_PASSWORD: ${GITLAB_API_TOKEN}
  GIT_NSHMP_USERNAME: ${GITLAB_USER_EMAIL}
  IMAGE_NAME_HAZ: nshmp-haz:${CI_COMMIT_REF_SLUG}
  IMAGE_NAME_WS: nshmp-haz-ws:${CI_COMMIT_REF_SLUG}
  JACOCO_HTML_DIR: build/reports/jacoco/test/html
  JUNIT_FILES: build/test-results/test/TEST-*.xml

include:
  - project: 'ghsc/hazdev/pipeline-build-template'
    ref: '1.1.3'
    file: 'templates/library.yml'

stages:
  - build
  - publish
  - deploy

####
# Templates
####

.gradle:
  extends:
    - .tags::development
  stage: build
  image: ${DEVOPS_REGISTRY}usgs/java:11

.docker-build:
  extends:
    - .build
  variables:
    DOCKER_BUILD_ARGS: |
      BUILD_IMAGE=${DEVOPS_REGISTRY}usgs/java:11
      FROM_IMAGE=${DEVOPS_REGISTRY}usgs/java:11
      ci_job_token=${CI_JOB_TOKEN}
      git_username=${GIT_NSHMP_USERNAME}
      git_password=${GIT_NSHMP_PASSWORD}

.templates:
  adjust-ref: &adjust-ref |
    if [[ \
      ${CI_COMMIT_REF_SLUG} == "master" || \
      ${CI_COMMIT_REF_SLUG} == "production" || \
      -n "${CI_COMMIT_TAG}" \
    ]]; then
      CI_COMMIT_REF_SLUG="latest";
    fi

.deploy:
  cache: {}
  image: ${CODE_REGISTRY}/ghsc/hazdev/cloud-formation/hazdev-build-runner:latest
  dependencies:
  script:
    - *adjust-ref
    - git clone ${GENERIC_SWARM_DEPLOY_REPO} generic-deploy
    - export REGISTRY=${CODE_REGISTRY_IMAGE}
    - cp -v
      generic-deploy/default.config.sh
      generic-deploy/default.funcs.sh
      generic-deploy/deploy.sh
      scripts/.
    - scripts/deploy.sh
  stage: deploy
  tags:
    - deploy
    - swarm
  variables:
    APP_NAME: nshmp-haz
    STACK_NAME: nshmp-haz

.onprem-staging:
  only:
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2

.staging01:
  tags:
    - staging01

.staging02:
  tags:
    - staging02

####
# Stage: build
####

Build Project:
  extends:
    - .gradle
  script:
    - ./gradlew assemble

Build Lambda:
  extends:
    - .gradle
  script:
    - ./gradlew --no-daemon assemble
    - ./gradlew --no-daemon libs
  artifacts:
    expire_in: 1 yr
    paths:
      - build/libs/nshmp-haz-v2.jar
      - build/libs/nshmp-haz-dependencies.zip

Unit Tests:
  extends:
    - .gradle
  coverage: '/Total.*?([0-9]{1,3})%/'
  script:
    - ./gradlew --no-daemon check
    - cat ${JACOCO_HTML_DIR}/index.html
  artifacts:
    paths:
      - ${JACOCO_HTML_DIR}
    reports:
      junit: ${JUNIT_FILES}

Build Haz Image:
  extends:
    - .docker-build
  before_script:
    - apk add git
    - *adjust-ref
  variables:
    CI_PROJECT_NAME: nshmp-haz

Build WS Image:
  extends:
    - .docker-build
  before_script:
    - apk add git
    - mv Dockerfile haz.Dockerfile
    - mv Dockerfile ws.Dockerfile Dockerfile
    - *adjust-ref
  variables:
    CI_PROJECT_NAME: nshmp-haz-ws

####
# Stage: Publish
####

Maven:
  extends:
    .gradle
  stage: publish
  only:
    - tags@ghsc/nshmp/nshmp-ws
  script:
    - ./gradlew publish -P version=${CI_COMMIT_TAG}

Trigger nshmp-deploy:
  stage: publish
  only:
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - apk add curl
    - |
      curl -X POST \
          -F token=${NSHMP_DEPLOY_TRIGGER_TOKEN} \
          -F ref=master \
          https://code.chs.usgs.gov/api/v4/projects/5047/trigger/pipeline

####
# Stage: Deploy
####

# Staging 01:
#   extends:
#     - .deploy
#     - .staging
#     - .staging01

# Staging 02:
#   extends:
#     - .deploy
#     - .staging
#     - .staging02
