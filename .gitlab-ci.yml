variables:
  NSHMP_HAZ_WS_IMAGE: ${CODE_REGISTRY_IMAGE}/nshmp-haz-ws:${ENVIRONMENT}-${CI_COMMIT_SHORT_SHA}

# Do not run for merge requests
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

include:
  - project: 'ghsc/nshmp/nshmp-pipeline-templates'
    ref: 'main'
    file: 'templates/library.yml'

stages:
  - init
  - build
  - trigger

####
# Templates
####

.gradle:
  image: ${DEVOPS_REGISTRY}usgs/amazoncorretto:11
  stage: build
  tags:
    - development

####
# Stage: init
####

Init:
  extends:
    - .gradle-init

####
# Stage: build
####

Build Image Haz:
  extends:
    - .docker-build
  variables:
    CI_PROJECT_NAME: nshmp-haz
    DOCKER_BUILD_ARGS: |
      BUILD_IMAGE=${DEVOPS_REGISTRY}usgs/amazoncorretto:11
      FROM_IMAGE=${DEVOPS_REGISTRY}usgs/amazoncorretto:11
      CI_JOB_TOKEN=${CI_JOB_TOKEN}
    UPSTREAM_PATH: ghsc/nshmp/nshmp-haz

Build Image WS:
  extends:
    - .docker-build
  variables:
    CI_PROJECT_NAME: nshmp-haz-ws
    DOCKER_BUILD_ARGS: |
      BUILD_IMAGE=${DEVOPS_REGISTRY}usgs/amazoncorretto:11
      FROM_IMAGE=${DEVOPS_REGISTRY}usgs/amazoncorretto:11
      CI_JOB_TOKEN=${CI_JOB_TOKEN}
    DOCKERFILE: ws.Dockerfile
    UPSTREAM_PATH: ghsc/nshmp/nshmp-haz

Build Project:
  extends:
    - .gradle
  needs:
    - Init
  rules:
    -
      changes:
        - 'src/**'
        - '*gradle*'
      when: on_success
    -
      allow_failure: true
      when: manual
  script:
    - ./gradlew assemble

Markdown Lint:
  extends:
    - .gradle
  needs:
    - Init
  rules:
    -
      changes:
        - '**/*.md'
      when: on_success
    -
      allow_failure: true
      when: manual
  script:
    - ./gradlew markdownlint;

Unit Tests:
  artifacts:
    paths:
      - ${JACOCO_HTML_DIR}
    reports:
      junit: ${JUNIT_FILES}
  coverage: '/Total.*?([0-9]{1,3})%/'
  extends:
    - .gradle
  needs:
    - Init
  rules:
    -
      changes:
        - 'src/**/*'
        - '*gradle*'
      when: on_success
    -
      allow_failure: true
      when: manual
  script:
    - ./gradlew check
    - cat ${JACOCO_HTML_DIR}/index.html

####
# Stage: trigger
####

Trigger nshmp-haz-ws CDK:
  needs:
    - Build Image WS
  rules:
    -
      if: !reference [.development-env, if]
      variables: !reference [.development-env, variables]
      when: manual
      allow_failure: true
    - !reference [.staging-env]
    - !reference [.production-env]
  script:
    - apk add curl
    - |
      if [ "${ENVIRONMENT}" == 'production' ]; then
        REF="production";
      fi
    - |
      curl --request POST \
        --form token=${NSHMP_HAZ_WS_CDK_TRIGGER_TOKEN} \
        --form ref=${REF} \
        --form "variables[description]=Triggered by nshmp-haz" \
        --form "variables[ENVIRONMENT]=${ENVIRONMENT}" \
        --form "variables[NSHMP_HAZ_WS_IMAGE]=${NSHMP_HAZ_WS_IMAGE}" \
        --form "variables[TRIGGER_PASSCODE]=${NSHMP_HAZ_WS_CDK_TRIGGER_TOKEN}" \
        "https://${PRIVATE_GITLAB}/api/v4/projects/${NSHMP_HAZ_WS_CDK_PROJECT_ID}/trigger/pipeline"
  stage: trigger
  variables:
    REF: main
    UPSTREAM_PATH: ghsc/nshmp/nshmp-haz
