variables:
  CI_REGISTRY: ${CODE_REGISTRY}
  CI_REGISTRY_IMAGE: ${CODE_REGISTRY_IMAGE}
  DOCKER_DIR: docker-images
  DOCKER_TAR: ${DOCKER_DIR}/app.tar
  GIT_NSHMP_PASSWORD: ${GITLAB_API_TOKEN}
  GIT_NSHMP_USERNAME: ${GITLAB_USER_EMAIL}
  IMAGE_NAME_HAZ: nshmp-haz:${CI_COMMIT_REF_SLUG}
  IMAGE_NAME_WS: nshmp-haz-ws:${CI_COMMIT_REF_SLUG}
  JACOCO_HTML_DIR: build/reports/jacoco/test/html
  JUNIT_FILES: build/test-results/test/TEST-*.xml

stages:
  - assemble
  - test
  - publish
  - deploy

cache:
  key: one-key-to-rule-them-all
  paths:
    - build
    - .gradle

####
# Templates
####

.dev-tags:
  tags:
    - development

.templates:
  adjust-image-names-haz: &adjust-image-names-haz |-
    DOCKERFILE="Dockerfile";
    IMAGE_NAME=${IMAGE_NAME_HAZ/:master/:latest};
    INTERNAL_IMAGE_NAME=${CI_REGISTRY_IMAGE}/${IMAGE_NAME_HAZ};
  adjust-image-names-ws: &adjust-image-names-ws |-
    DOCKERFILE="ws.Dockerfile";
    IMAGE_NAME=${IMAGE_NAME_WS/:master/:latest};
    INTERNAL_IMAGE_NAME=${CI_REGISTRY_IMAGE}/${IMAGE_NAME_WS};

.docker-build:
  stage: test
  image: docker:stable
  extends: .dev-tags
  only:
    - branches
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - apk add git
    - mkdir ${DOCKER_DIR}
    - |
      docker build \
        --build-arg ci_job_token="${CI_JOB_TOKEN}" \
        -f ${DOCKERFILE} \
        -t local/${IMAGE_NAME} .;
    - docker save local/${IMAGE_NAME} > ${DOCKER_TAR}
  artifacts:
    paths:
      - ${DOCKER_DIR}

.docker-publish:
  stage: publish
  image: docker:stable
  extends: .dev-tags
  only:
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - |
      echo "${CHS_PASSWORD}" | \
          docker login --username ${CHS_USERNAME} --password-stdin ${CODE_REGISTRY}
    - docker load -i ${DOCKER_TAR}
    - docker tag local/${IMAGE_NAME} ${INTERNAL_IMAGE_NAME}
    - docker push ${INTERNAL_IMAGE_NAME}
    - docker image rm local/${IMAGE_NAME}
    - docker image rm ${INTERNAL_IMAGE_NAME}
    - rm -rf /root/.docker/config.json

.deploy:
  cache: {}
  image: ${CODE_REGISTRY}/ghsc/hazdev/cloud-formation/hazdev-build-runner:latest
  dependencies:
  before_script:
    - *adjust-image-names-ws
    - docker pull ${INTERNAL_IMAGE_NAME}
  script:
    - git clone ${GENERIC_SWARM_DEPLOY_REPO} generic-deploy
    - export REGISTRY=${CI_REGISTRY_IMAGE}
    - cp -v
      generic-deploy/default.config.sh
      generic-deploy/default.funcs.sh
      generic-deploy/deploy.sh
      scripts/.
    - scripts/deploy.sh
  stage: deploy
  tags:
    - deploy
    - swarm
  variables:
    APP_NAME: nshmp-haz
    STACK_NAME: nshmp-haz
  retry:
    max: 2
    when: 'always'

.staging:
  only:
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2

.staging01:
  tags:
    - staging01

.staging02:
  tags:
    - staging02

####
# Stage: assemble
####

Build Project:
  stage: assemble
  image: gradle:jdk11
  extends: .dev-tags
  only:
    - branches
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - ./gradlew --build-cache --no-daemon assemble
  retry:
    max: 2
    when: 'always'

####
# Stage: Test
####

Build Lambda:
  stage: test
  image: gradle:jdk11
  extends: .dev-tags
  only:
    - branches
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - ./gradlew --no-daemon assemble
    - ./gradlew --no-daemon libs
  artifacts:
    expire_in: 1 yr
    paths:
      - build/libs/nshmp-haz-v2.jar
      - build/libs/nshmp-haz-dependencies.zip
  retry:
    max: 2
    when: 'always'

Unit Tests:
  stage: test
  image: gradle:jdk11
  extends: .dev-tags
  only:
    - branches
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  coverage: '/Total.*?([0-9]{1,3})%/'
  script:
    - ./gradlew --no-daemon check
    - cat ${JACOCO_HTML_DIR}/index.html
  artifacts:
    paths:
      - ${JACOCO_HTML_DIR}
    reports:
      junit: ${JUNIT_FILES}
  retry:
    max: 2
    when: 'always'

Build Haz Image:
  extends: .docker-build
  before_script:
    - *adjust-image-names-haz
  retry:
    max: 2
    when: 'always'

Build WS Image:
  extends: .docker-build
  before_script:
    - *adjust-image-names-ws
  retry:
    max: 2
    when: 'always'

####
# Stage: Publish
####

Publish Haz Image:
  extends: .docker-publish
  before_script:
    - *adjust-image-names-haz
  retry:
    max: 2
    when: 'always'

Publish WS Image:
  extends: .docker-publish
  before_script:
    - *adjust-image-names-ws
  retry:
    max: 2
    when: 'always'

Maven:
  image: gradle:jdk11
  stage: publish
  extends: .dev-tags
  only:
    - tags@ghsc/nshmp/nshmp-ws
  script:
    - ./gradlew publish -P version=${CI_COMMIT_TAG}

Trigger nshmp-deploy:
  stage: publish
  only:
    - master@ghsc/nshmp/nshmp-haz-v2
    - tags@ghsc/nshmp/nshmp-haz-v2
  script:
    - apk add curl
    - |
      curl -X POST \
          -F token=${NSHMP_DEPLOY_TRIGGER_TOKEN} \
          -F ref=master \
          https://code.chs.usgs.gov/api/v4/projects/5047/trigger/pipeline

####
# Stage: Deploy
####

# Staging 01:
#   extends:
#     - .deploy
#     - .staging
#     - .staging01

# Staging 02:
#   extends:
#     - .deploy
#     - .staging
#     - .staging02
