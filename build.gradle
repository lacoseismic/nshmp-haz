/*
 * Eclipse notes: In order to build and run services via Eclipse,
 * one needs to include the following directories in webapp (they
 * are ignored by git):
 *
 *   webapp/
 *      models/
 *         ak/
 *            2007/
 *         wus/
 *            2008/
 *            2014/
 *            2014b/
 *            2018/
 *         ceus/
 *            2008/
 *            2014/
 *            2018/
 *
 * ...with each 'year' directory being an alias to the corresponding
 * git repository. One also must set Properties > Deployment Assembly
 * to include the nshmp-haz project and the 'webapp' directory. Other
 * default Eclipse directories such as WebContent may be deleted.
 */

plugins {
  id 'eclipse-wtp'
  id 'jacoco'
  id 'war'
  id "com.star-zero.gradle.githook" version "1.2.0"
  id "com.github.spotbugs" version "3.0.0"
  id "com.diffplug.gradle.spotless" version "3.27.1"
}

apply from: "${projectDir}/gradle/ext.gradle"
apply from: "${projectDir}/gradle/jar.gradle"
apply from: "${projectDir}/gradle/javadoc.gradle"
apply from: "${projectDir}/gradle/tasks.gradle"
apply from: project(":nshmp-lib").file("gradle/git-hooks.gradle")
apply from: project(":nshmp-lib").file("gradle/spotbugs.gradle")
apply from: project(":nshmp-lib").file("gradle/spotless.gradle")

sourceCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = 'UTF-8'

jacoco {
  toolVersion = '0.8.4'
}

repositories {
  jcenter()
}

dependencies {
  implementation 'org.apache.tomcat:tomcat-catalina:8.0.45'
  implementation 'javax.websocket:javax.websocket-api:1.1'
  implementation 'com.amazonaws:aws-lambda-java-core:1.1.0'
  implementation 'com.amazonaws:aws-java-sdk-lambda:1.11.461'
  implementation 'com.amazonaws:aws-java-sdk-s3:1.11.579'
  implementation 'com.amazonaws:aws-java-sdk-ec2:1.11.619'
  implementation project(':nshmp-lib')

  testImplementation 'junit:junit:4.12'
}

sourceSets {
  main {
    java {
      srcDirs = ['src']
    }
    resources {
      srcDirs = ['src']
      exclude '**/*.java'
    }
  }
  test {
    java {
      srcDirs = ['test']
    }
    resources {
      srcDirs = ['test']
      exclude '**/*.java'
    }
  }
}

test {
  filter {
    includeTestsMatching "gov.usgs.earthquake.nshmp.programs.*"
  }
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
  afterEvaluate {
    classDirectories.from(files(classDirectories.files.collect {
      fileTree(
          dir: it,
          exclude: ['**/etc/**'])
    }))
  }
}
check.dependsOn jacocoTestReport

/**
 * Create war file with production models
 */
war {
  enabled = true
  webAppDirName = 'webapp'
  dependsOn jar

  /*
   * Exclude existing models directory with symlinks
   * to support Eclipse deployments.
   */
  exclude 'models'

  prod_models.each{model ->
    from(model[0]) { into model[1] }
  }

  doFirst {
    /* Record service and model versions */
    writeProperties()
  }
}


/**
 * Create properties file
 */
def writeProperties() {
  def props = new Properties()
  def propsFile = new File(project.buildDir.toString() + propsPath)
  propsFile.createNewFile()
  props.setProperty('app.version', getGitTag('.'))
  props.setProperty('E2007.version', getGitTag(repo_ak_2007))
  props.setProperty('E2008.version', getGitTag(repo_cous_2008))
  props.setProperty('E2014.version', getGitTag(repo_cous_2014))
  props.setProperty('E2014B.version', getGitTag(repo_cous_2014b))
  props.setProperty('E2018.version', getGitTag(repo_cous_2018))
  props.setProperty('E2020.version', getGitTag(repo_hi_2020))
  props.store(propsFile.newWriter(), null)
}

/*
 * Update XML formatting
 */
spotless {
  /* XML formatting */
  format "xml", {
    target fileTree(".") {
      include "**/*.xml"
      exclude "**/build/**", ".settings/**", "**/webapp/models/**"
    }
  }
}

/* Add HTML reports to SpotBugs */
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}
