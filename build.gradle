plugins {
  id "application"
  id "com.diffplug.spotless" version "${spotlessVersion}"
  id "com.github.johnrengelman.shadow" version "${shadowVersion}"
  id "com.github.node-gradle.node" version "${nodePluginVersion}"
  id "com.github.spotbugs" version "${spotbugsVersion}"
  id "com.palantir.git-version" version "${gitVersionVersion}" apply false
  id "com.star-zero.gradle.githook" version "${githooksVersion}"
  id "de.undercouch.download" version "${downloadVersion}"
  id "eclipse-wtp"
  id "jacoco"
  id "maven-publish"
}

apply from: "${projectDir}/gradle/app-version.gradle"
apply from: "${projectDir}/gradle/dependencies.gradle"
apply from: "${projectDir}/gradle/ext.gradle"
apply from: "${projectDir}/gradle/jar.gradle"
apply from: "${projectDir}/gradle/git-hooks.gradle"
apply from: "${projectDir}/gradle/node.gradle"
apply from: "${projectDir}/gradle/nshm.gradle"
apply from: "${projectDir}/gradle/repositories.gradle"
apply from: "${projectDir}/gradle/spotbugs.gradle"
apply from: "${projectDir}/gradle/spotless.gradle"


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
mainClassName = "gov.usgs.earthquake.nshmp.www.Application"
sourceCompatibility = JavaVersion.VERSION_11

jacoco {
  toolVersion = "0.8.4"
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
  afterEvaluate {
    classDirectories.from(files(classDirectories.files.collect {
      fileTree(
          dir: it,
          exclude: ["**/etc/**"])
    }))
  }
}
check.dependsOn jacocoTestReport

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.add("-parameters")
}

tasks.withType(JavaExec) {
  dependsOn downloadNshms
  jvmArgs(
      '-noverify',
      '-Xms2g',
      '-Xmx8g',
      '-XX:TieredStopAtLevel=1',
      '-Dcom.sun.management.jmxremote',
      )
}

/* Add HTML reports to SpotBugs */
tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
  reports {
    html {
      enabled true
      stylesheet = 'fancy-hist.xsl'
    }
  }
}

test {
  useJUnitPlatform()

  filter {
    excludeTestsMatching "gov.usgs.earthquake.nshmp.model.NshmTestsConus"
    excludeTestsMatching "gov.usgs.earthquake.nshmp.model.NshmTestsHawaii"
  }
}
