/*
 * The default jar task automatically builds a fat jar and adds
 * a properties file with the application version. Note that
 * 'git describe' only works when running gradle from the command
 * line so version values in eclipse builds will empty. Use thinJar
 * task to skip dependencies.
 */
jar {
  doFirst {
    /* possible fat jar */
    if (rootProject.name == projectName && !thinJar) {
      from {
        configurations.compileClasspath.collect {
          it.isDirectory() ? it : zipTree(it).matching {
            exclude { it.path.contains('META-INF') }
          }
        }
      }
    }

    /*
     * Possibly record app version. The creation of this file
     * on each build causes the classpath to appear changed so
     * Gradle reruns tests, even though no code has changed.
     */
    def props = new Properties()
    def propsFile = new File(project.buildDir.toString() + propsPath)
    if (propsFile.exists()) {
      props.load(propsFile.newReader())
    } else {
      propsFile.createNewFile()
    }
    if (!gitTag.equals(props.getProperty('app.version'))) {
      props.setProperty('app.version', gitTag)
      props.store(propsFile.newWriter(), null)
    }
  }
}
